<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Calendar</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            font-family: Arial, sans-serif;
            margin: 0;
            height: 100vh;
            transition:1s;
        }
        #calendar {
            margin-top: 100px;
            border: 1px solid black;
            border-radius: 15px;
            display: flex;
            flex-direction: column;
            gap: 30px;
            padding: 30px;
            box-shadow: 4px 4px 10px 2px rgba(0, 0, 0, 0.5);
            background-color: rgba(255, 255, 255, 0.628);
            height: 360px;
            transition: clip-path 0.3s ease-in-out;
        }
        #calendarhead {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        #calendarheadcenter {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 5px;
        }
        #calendarheadcenter h1 {
            transition: opacity 1s ease, transform 1s ease;
        }

        #calendarBody {
            transition: opacity 1s ease;
            opacity: 0;
        }

        button {
            height: 50px;
            width: 50px;
            font-size: 20px;
            cursor: pointer;
            background-color: transparent;
            color: rgb(255, 255, 255);
            border: none;
            background-color: hsla(0, 0%, 0%, 0.443);
            border-radius: 50%;
            &:hover{
                color:hsla(0, 0%, 0%, 0.443);
                background-color: white;
            }
        }
        span {
            font-size: 18px;
            color: #000000;
        }
        #calendarmain {
            display: flex;
            justify-content: center;
        }
        table {
            border-collapse: collapse;
        }
        th, td {
            width: 40px;
            height: 40px;
            text-align: center;
            font-size: 16px;
            font-weight: bold;
        }
        td {
            cursor: pointer;
        }
        td:hover {
            background-color: #f0f0f0;
            border-radius: 50%;
            color: black;
        }
        .current-day {
            background-color:  hsla(0, 0%, 0%, 0.443);
            color: white;
            border-radius: 50%;
        }
    </style>
</head>
<body>
    <div id="calendar">
        <div id="calendarhead">
            <button id="prevMonth"><</button>
            <div id="calendarheadcenter">
                <h1 id="month">December</h1>
                <span id="fullDate">Wed, 1 December 2027</span>
            </div>
            <button id="nextMonth">></button>
        </div>
        <div id="calendarmain">
            <table id="days">
                <tbody id="calendarBody"></tbody>
            </table>
        </div>
    </div>

    <script>
        const monthElement = document.getElementById('month');
        const fullDateElement = document.getElementById('fullDate');
        const calendarBody = document.getElementById('calendarBody');
        const prevMonthButton = document.getElementById('prevMonth');
        const nextMonthButton = document.getElementById('nextMonth');

        const months = [
            "January", "February", "March", "April", "May", "June", 
            "July", "August", "September", "October", "November", "December"
        ];

        const weekdays = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];

        let currentDate = new Date();

        function applySeasonBackground(month) {
            if (month === 11 || month === 0 || month === 1) {
                document.body.style.background = "url('1.jpg') no-repeat center center fixed";
                document.body.style.backgroundSize = "cover";
            } else if (month === 2 || month === 3 || month === 4) {
                document.body.style.background = "url('2.jpg') no-repeat center center fixed";
                document.body.style.backgroundSize = "cover";
            } else if (month === 5 || month === 6 || month === 7) {
                document.body.style.background = "url('3.jpg') no-repeat center center fixed";
                document.body.style.backgroundSize = "cover";
            } else {
                document.body.style.background = "url('4.jpg') no-repeat center center fixed";
                document.body.style.backgroundSize = "cover";
            }
        }

        function renderCalendar() {
    const month = currentDate.getMonth();
    const year = currentDate.getFullYear();

    applySeasonBackground(month);

    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);
    const daysInMonth = lastDay.getDate();

    const firstDayOfWeek = firstDay.getDay();

    const adjustedFirstDay = (firstDayOfWeek === 0) ? 6 : firstDayOfWeek - 1;

    calendarBody.style.opacity = 0;

    setTimeout(() => {
        calendarBody.innerHTML = '';

        monthElement.textContent = months[month];
        fullDateElement.textContent = `${weekdays[adjustedFirstDay]}, ${firstDay.getDate()} ${months[month]} ${year}`;

        let day = 1;
        let rows = [];
        for (let i = 0; i < 6; i++) {
            let row = [];
            for (let j = 0; j < 7; j++) {
                if (i === 0 && j < adjustedFirstDay) {
                    row.push('<td></td>'); 
                } else if (day <= daysInMonth) {
                    const currentCell = (day === new Date().getDate() && month === new Date().getMonth() && year === new Date().getFullYear()) ? 
                        `<td class="current-day">${day}</td>` : 
                        `<td>${day}</td>`;
                    row.push(currentCell);
                    day++;
                } else {
                    row.push('<td></td>'); 
                }
            }
            rows.push(`<tr>${row.join('')}</tr>`);
        }

        calendarBody.innerHTML = rows.join('');
        
   
        setTimeout(() => {
            calendarBody.style.opacity = 1;
        }, 20);
    }, 800);
}


        prevMonthButton.onclick = function() {
            currentDate.setMonth(currentDate.getMonth() - 1);
            calendar.style.clipPath = 'polygon(0 0, 100% 0, 100% 100%, 100% 0)';
            renderCalendar();
            setTimeout(() => {
            calendar.style.clipPath = 'polygon(0 0, 100% 0, 100% 100%, 0% 100%)';
            }, 500); 
        }

        nextMonthButton.onclick = function() {
            calendar.style.clipPath = 'polygon(0 0, 100% 0, 0 0, 0% 100%)';
    
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar();
            
            setTimeout(() => {
            calendar.style.clipPath = 'polygon(0 0, 100% 0, 100% 100%, 0% 100%)';
            }, 500); 
        };

        renderCalendar(); 
    </script>
</body>
</html>
